# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:57:55+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class Type(Enum):
    Created = 'Created'
    Draft = 'Draft'
    Cloned = 'Cloned'
    SentViaEmail = 'SentViaEmail'
    SentViaSms = 'SentViaSms'
    SentReminderViaEmail = 'SentReminderViaEmail'
    SentReminderViaSms = 'SentReminderViaSms'
    Opened = 'Opened'
    Viewed = 'Viewed'
    Rejected = 'Rejected'
    Updated = 'Updated'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    NewManualPayment = 'NewManualPayment'
    NewPaymentWithPaypal = 'NewPaymentWithPaypal'
    NewPaymentWithStripe = 'NewPaymentWithStripe'
    NewPaymentWithPayoneer = 'NewPaymentWithPayoneer'
    SentToAccountant = 'SentToAccountant'
    DownloadedAsPdf = 'DownloadedAsPdf'
    MarkAsPaidByTheClient = 'MarkAsPaidByTheClient'
    OpenedAttachment = 'OpenedAttachment'
    NewPaymentWithSquare = 'NewPaymentWithSquare'
    NewPaymentWithKlikAndPay = 'NewPaymentWithKlikAndPay'
    NewPaymentWithRazorpay = 'NewPaymentWithRazorpay'
    NewPaymentWithWepay = 'NewPaymentWithWepay'
    NewPaymentWithHalkbank = 'NewPaymentWithHalkbank'
    ChangeStatus = 'ChangeStatus'
    OrderUpdated = 'OrderUpdated'
    OrderCreated = 'OrderCreated'
    NewPaymentWithTwoCheckout = 'NewPaymentWithTwoCheckout'
    NewPaymentWithPaymentWall = 'NewPaymentWithPaymentWall'
    NewPaymentWithBamboraEU = 'NewPaymentWithBamboraEU'
    NewPaymentWithBamboraNA = 'NewPaymentWithBamboraNA'
    Void = 'Void'
    NewPaymentWithNlb = 'NewPaymentWithNlb'
    NewPaymentWithAuthorizeNet = 'NewPaymentWithAuthorizeNet'
    NewPaymentWithBraintree = 'NewPaymentWithBraintree'
    EstimationCreated = 'EstimationCreated'
    EstimationDraft = 'EstimationDraft'
    EstimationCloned = 'EstimationCloned'
    EstimationSentViaEmail = 'EstimationSentViaEmail'
    EstimationOpened = 'EstimationOpened'
    EstimationViewed = 'EstimationViewed'
    EstimationAccepted = 'EstimationAccepted'
    EstimationRejected = 'EstimationRejected'
    EstimationUpdated = 'EstimationUpdated'
    EstimationDownloadedAsPdf = 'EstimationDownloadedAsPdf'
    InvoiceDigitallySigned = 'InvoiceDigitallySigned'


class Activity(BaseModel):
    EstimationId: Optional[int] = None
    EstimationNumber: Optional[str] = None
    Id: Optional[int] = None
    InvoiceId: Optional[int] = None
    InvoiceNumber: Optional[str] = None
    Link: Optional[str] = None
    Message: Optional[str] = None
    OrderId: Optional[int] = None
    OrderNumber: Optional[str] = None
    Type_1: Optional[Type] = Field(None, alias='Type')
    UserId: Optional[int] = None


class AdditionalClientEmailApiModel(BaseModel):
    Email: Optional[str] = Field(None, description='CC')


class Status(Enum):
    PendingPayment = 'PendingPayment'
    Processing = 'Processing'
    Shipped = 'Shipped'
    Completed = 'Completed'
    OnHold = 'OnHold'
    Cancelled = 'Cancelled'
    Refunded = 'Refunded'
    Failed = 'Failed'


class ChangeOrderStatusApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Order Id')
    Reason: Optional[str] = Field(None, description='Reason for status change')
    Status_1: Optional[Status] = Field(
        None, alias='Status', description='New status of the order'
    )


class Status1(Enum):
    Draft = 'Draft'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    Void = 'Void'


class ChangeStatusApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Invoice Id')
    Status: Optional[Status1] = Field(None, description='New status of the invoice')


class Client(BaseModel):
    Address: Optional[str] = None
    ClientCountryId: Optional[int] = None
    ClientCurrencyId: Optional[int] = None
    CompanyRegistrationNumber: Optional[str] = None
    DefaultDueDateInDays: Optional[int] = None
    Email: Optional[str] = None
    Id: Optional[int] = None
    Name: Optional[str] = None
    PhoneNumber: Optional[str] = None
    UiLanguageId: Optional[int] = None
    UserId: Optional[int] = None
    Vat: Optional[str] = None


class ClientCreateApiModel(BaseModel):
    AdditionalEmails: Optional[List[AdditionalClientEmailApiModel]] = Field(
        None, description='Client additional emails contact for CC'
    )
    Address: Optional[str] = Field(None, description='Client business address')
    ClientCountryId: Optional[int] = Field(
        None, description='Indicates the country where the clients is from'
    )
    ClientCurrencyId: Optional[int] = Field(
        None,
        description='Indicates the default system currency used by the user for the client',
    )
    CompanyRegistrationNumber: Optional[str] = Field(
        None, description="Client's Company Registration Number"
    )
    DefaultDueDateInDays: Optional[int] = Field(
        None, description='Client custom payment terms'
    )
    Email: Optional[str] = Field(None, description='Client email')
    Name: Optional[str] = Field(None, description='Name of the client')
    PhoneNumber: Optional[str] = Field(None, description='Client phone numer')
    UiLanguageId: Optional[int] = Field(
        None,
        description='Hold a value of the language in which the invoice will be sent',
    )
    Vat: Optional[str] = Field(None, description="Client's VAT number")


class ClientDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of client to be deleted')


class ClientDetailsApiModel(BaseModel):
    AdditionalEmails: Optional[List[AdditionalClientEmailApiModel]] = Field(
        None, description='Client additional emails contact for CC'
    )
    Address: Optional[str] = Field(None, description='Client business address')
    ClientCountryId: Optional[int] = Field(
        None, description='Indicates the country where the clients is from'
    )
    ClientCurrencyId: Optional[int] = Field(
        None,
        description='Indicates the default system currency used by the user for the client',
    )
    CompanyRegistrationNumber: Optional[str] = Field(
        None, description="Client's Company Registration Number"
    )
    CreatedOn: Optional[datetime] = Field(None, description='Date of creation')
    DefaultDueDateInDays: Optional[int] = Field(
        None, description='Client custom payment terms'
    )
    Email: Optional[str] = Field(None, description='Client email')
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the client')
    PhoneNumber: Optional[str] = Field(None, description='Client phone numer')
    UiLanguageId: Optional[int] = Field(
        None,
        description='Hold a value of the language in which the invoice will be sent',
    )
    Vat: Optional[str] = Field(None, description="Client's VAT number")


class ClientUpdateApiModel(BaseModel):
    AdditionalEmails: Optional[List[AdditionalClientEmailApiModel]] = Field(
        None, description='Client additional emails contact for CC'
    )
    Address: Optional[str] = Field(None, description='Client business address')
    ClientCountryId: Optional[int] = Field(
        None, description='Indicates the country where the clients is from'
    )
    ClientCurrencyId: Optional[int] = Field(
        None,
        description='Indicates the default system currency used by the user for the client',
    )
    CompanyRegistrationNumber: Optional[str] = Field(
        None, description="Client's Company Registration Number"
    )
    DefaultDueDateInDays: Optional[int] = Field(
        None, description='Client custom payment terms'
    )
    Email: Optional[str] = Field(None, description='Client email')
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the client')
    PhoneNumber: Optional[str] = Field(None, description='Client phone numer')
    UiLanguageId: Optional[int] = Field(
        None,
        description='Hold a value of the language in which the invoice will be sent',
    )
    Vat: Optional[str] = Field(None, description="Client's VAT number")


class Country(BaseModel):
    Id: Optional[int] = None
    Name: Optional[str] = None
    Value: Optional[str] = None


class CountryDetailsApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the country')
    Value: Optional[str] = Field(None, description='Country short code')


class Currency(BaseModel):
    Code: Optional[str] = None
    Id: Optional[int] = None
    Name: Optional[str] = None
    Symbol: Optional[str] = None
    Value: Optional[str] = None


class CurrencyApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Name of the currency')
    Value: Optional[str] = Field(None, description='Currency short code')


class CurrencyDetailsApiModel(BaseModel):
    Code: Optional[str] = Field(None, description='Currency short numeric code')
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the country')
    Symbol: Optional[str] = Field(None, description='Currency symbol')
    Value: Optional[str] = Field(None, description='Currency short alpha code')


class EstimationActivityApiModel(BaseModel):
    EstimationNumber: Optional[str] = Field(
        None, description='Indicates to which estimation this activity refers to'
    )
    Id: Optional[int] = Field(None, description='Id of estimation activity')
    Link: Optional[str] = Field(
        None,
        description='Url which point out to a certain activity action. Ex: Click to view the payment',
    )
    Message: Optional[str] = Field(
        None, description='Message associated with the activity'
    )
    Type_1: Optional[Type] = Field(
        None, alias='Type', description='Type of the activity'
    )


class Type2(Enum):
    External = 'External'
    Uploaded = 'Uploaded'


class EstimationAttachmentApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of estimation attachment')
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type2] = Field(
        None, description='Type of the link (Attached or external)'
    )


class Status2(Enum):
    Draft = 'Draft'
    Accepted = 'Accepted'
    Rejected = 'Rejected'


class EstimationChangeStatusApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Estimation Id')
    Status: Optional[Status2] = Field(None, description='New status of the estimation')


class EstimationCreateAttachmentApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type2] = Field(
        None, description='Type of the link (Attached or external)'
    )


class EstimationCreateItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the estimation item'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class EstimationDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of estimation to be deleted')


class EstimationDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(
        None,
        description='Security access token used for accessing the estimation anonymously',
    )
    Client: Optional[ClientDetailsApiModel] = None
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which estimation this estimation has been cloned from',
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    ExpiresOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation will be proclamed as due'
    )
    Id: Optional[int] = Field(None, description='Estimation id')
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation was issued'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the estimation'
    )
    Number: Optional[str] = Field(None, description='Unique estimation number')
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    Status: Optional[Status2] = Field(
        None, description='Indicate the status of the estimation (paid/unpaid/overdue)'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Total amount of the estimation without tax'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    Terms: Optional[str] = Field(None, description='Terms of agreement')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the estimation with tax'
    )


class EstimationGatewayApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Name of the payment gateway')


class EstimationItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the estimation item'
    )
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Id: Optional[int] = Field(None, description='Id of estimation item')
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Sub-Total amount of the estimation item (Amount without tax)'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the estimation item'
    )
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class EstimationUpdateAttachmentApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of estimation attachment')
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type2] = Field(
        None, description='Type of the link (Attached or external)'
    )


class EstimationUpdateItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the estimation item'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Id: Optional[int] = Field(None, description='Id of estimation item')
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class EstimationUriApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Unique link to the estimation')


class ExternalConnection(BaseModel):
    AccessToken: Optional[str] = None
    AccessTokenSecret: Optional[str] = None
    Data: Optional[str] = None
    ExpiresOn: Optional[datetime] = None
    ExternalUserId: Optional[str] = None
    ExternalUsername: Optional[str] = None
    Id: Optional[int] = None
    Provider: Optional[str] = None
    UserId: Optional[int] = None


class IErrorInfo(BaseModel):
    Code: Optional[str] = None
    FaultMessage: Optional[str] = None
    Group: Optional[str] = None
    UserVisibleMessage: Optional[str] = None


class Status7(Enum):
    Draft = 'Draft'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    Void = 'Void'


class Type5(Enum):
    Created = 'Created'
    Draft = 'Draft'
    Cloned = 'Cloned'
    SentViaEmail = 'SentViaEmail'
    SentViaSms = 'SentViaSms'
    SentReminderViaEmail = 'SentReminderViaEmail'
    SentReminderViaSms = 'SentReminderViaSms'
    Opened = 'Opened'
    Viewed = 'Viewed'
    Rejected = 'Rejected'
    Updated = 'Updated'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    NewManualPayment = 'NewManualPayment'
    NewPaymentWithPaypal = 'NewPaymentWithPaypal'
    NewPaymentWithStripe = 'NewPaymentWithStripe'
    NewPaymentWithPayoneer = 'NewPaymentWithPayoneer'
    SentToAccountant = 'SentToAccountant'
    DownloadedAsPdf = 'DownloadedAsPdf'
    MarkAsPaidByTheClient = 'MarkAsPaidByTheClient'
    OpenedAttachment = 'OpenedAttachment'
    NewPaymentWithSquare = 'NewPaymentWithSquare'
    NewPaymentWithKlikAndPay = 'NewPaymentWithKlikAndPay'
    NewPaymentWithRazorpay = 'NewPaymentWithRazorpay'
    NewPaymentWithWepay = 'NewPaymentWithWepay'
    NewPaymentWithHalkbank = 'NewPaymentWithHalkbank'
    ChangeStatus = 'ChangeStatus'
    OrderUpdated = 'OrderUpdated'
    OrderCreated = 'OrderCreated'
    NewPaymentWithTwoCheckout = 'NewPaymentWithTwoCheckout'
    NewPaymentWithPaymentWall = 'NewPaymentWithPaymentWall'
    NewPaymentWithBamboraEU = 'NewPaymentWithBamboraEU'
    NewPaymentWithBamboraNA = 'NewPaymentWithBamboraNA'
    Void = 'Void'
    NewPaymentWithNlb = 'NewPaymentWithNlb'
    NewPaymentWithAuthorizeNet = 'NewPaymentWithAuthorizeNet'
    NewPaymentWithBraintree = 'NewPaymentWithBraintree'
    EstimationCreated = 'EstimationCreated'
    EstimationDraft = 'EstimationDraft'
    EstimationCloned = 'EstimationCloned'
    EstimationSentViaEmail = 'EstimationSentViaEmail'
    EstimationOpened = 'EstimationOpened'
    EstimationViewed = 'EstimationViewed'
    EstimationAccepted = 'EstimationAccepted'
    EstimationRejected = 'EstimationRejected'
    EstimationUpdated = 'EstimationUpdated'
    EstimationDownloadedAsPdf = 'EstimationDownloadedAsPdf'
    InvoiceDigitallySigned = 'InvoiceDigitallySigned'


class InvoiceActivityApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of invoice activity')
    InvoiceNumber: Optional[str] = Field(
        None, description='Indicates to which invoice this activity refers to'
    )
    Link: Optional[str] = Field(
        None,
        description='Url which point out to a certain activity action. Ex: Click to view the payment',
    )
    Message: Optional[str] = Field(
        None, description='Message associated with the activity'
    )
    Type: Optional[Type5] = Field(None, description='Type of the activity')


class Type6(Enum):
    External = 'External'
    Uploaded = 'Uploaded'


class InvoiceAttachment(BaseModel):
    Id: Optional[int] = None
    InvoiceId: Optional[int] = None
    Link: Optional[str] = None
    ObfuscatedFileName: Optional[str] = None
    OriginalFileName: Optional[str] = None
    Size: Optional[int] = None
    Type: Optional[Type6] = None


class InvoiceAttachmentApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of invoice attachment')
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type6] = Field(
        None, description='Type of the link (Attached or external)'
    )


class InvoiceCategoryApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Category name')


class InvoiceCategoryCreateApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Category name')


class InvoiceCategoryDeleteApiModel(BaseModel):
    Id: Optional[int] = None


class InvoiceCategoryUpdateApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Category name')


class InvoiceCreateAttachmentApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type6] = Field(
        None, description='Type of the link (Attached or external)'
    )


class InvoiceCreateItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the invoice item'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class InvoiceDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of invoice to be deleted')


class InvoiceGatewayApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Name of the payment gateway')


class InvoiceItem(BaseModel):
    Cost: Optional[float] = None
    Description: Optional[str] = None
    DiscountAmount: Optional[float] = None
    DiscountPercentage: Optional[float] = None
    Id: Optional[int] = None
    InvoiceId: Optional[int] = None
    Quantity: Optional[float] = None
    SubTotalAmount: Optional[float] = None
    TaxAmount: Optional[float] = None
    TaxId: Optional[int] = None
    TaxPercentage: Optional[float] = None
    TotalAmount: Optional[float] = None
    WorkTypeId: Optional[int] = None


class InvoiceItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the invoice item'
    )
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Id: Optional[int] = Field(None, description='Id of invoice item')
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Sub-Total amount of the invoice item (Amount without tax)'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the invoice item'
    )
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class Type9(Enum):
    SendInvoice = 'SendInvoice'
    SendInvoiceReminder = 'SendInvoiceReminder'


class InvoiceMessage(BaseModel):
    AttachPdf: Optional[bool] = None
    Id: Optional[int] = None
    InvoiceId: Optional[int] = None
    Message: Optional[str] = None
    SendToSelf: Optional[bool] = None
    Subject: Optional[str] = None
    Type: Optional[Type9] = None


class Type10(Enum):
    Other = 'Other'
    Paypal = 'Paypal'
    Stripe = 'Stripe'
    Payoneer = 'Payoneer'
    Bank = 'Bank'
    Cash = 'Cash'
    Cheque = 'Cheque'
    Ach = 'Ach'
    Sepa = 'Sepa'
    Square = 'Square'
    KlikAndPay = 'KlikAndPay'
    Razorpay = 'Razorpay'
    Wepay = 'Wepay'
    Halkbank = 'Halkbank'
    TwoCheckout = 'TwoCheckout'
    PaymentWall = 'PaymentWall'
    BamboraEU = 'BamboraEU'
    BamboraNA = 'BamboraNA'
    Nlb = 'Nlb'
    AuthorizeNet = 'AuthorizeNet'
    Braintree = 'Braintree'


class InvoicePaymentApiModel(BaseModel):
    Amount: Optional[float] = Field(None, description='Total amount of the payment')
    Id: Optional[int] = Field(None, description='Id of invoice payment')
    IsAutomatic: Optional[bool] = Field(
        None, description='Indicate if the payment is automatic or manual'
    )
    Note: Optional[str] = Field(None, description='Internal payment note')
    PaidOn: Optional[datetime] = Field(
        None, description='When the payment was done by the client'
    )
    ReferenceId: Optional[str] = Field(None, description='Id of the payment')
    Type: Optional[Type10] = Field(None, description='Type of payment')


class DayOfWeek(Enum):
    Sunday = 'Sunday'
    Monday = 'Monday'
    Tuesday = 'Tuesday'
    Wednesday = 'Wednesday'
    Thursday = 'Thursday'
    Friday = 'Friday'
    Saturday = 'Saturday'


class RecurrancePattern(Enum):
    Daily = 'Daily'
    Weekly = 'Weekly'
    Monthly = 'Monthly'
    Yearly = 'Yearly'


class Status11(Enum):
    Pending = 'Pending'
    Active = 'Active'
    Cancelled = 'Cancelled'
    Finished = 'Finished'


class InvoiceRecurringApiModel(BaseModel):
    DayOfMonth: Optional[int] = Field(
        None, description='Day of month when the recurrance should happen'
    )
    DayOfWeek_1: Optional[DayOfWeek] = Field(
        None, alias='DayOfWeek', description='Day when the recurrance should happen'
    )
    DueDateInDays: Optional[int] = Field(
        None,
        description='Total number of days for the client to pay the invoice after issuing it',
    )
    EndOfRecurrance: Optional[datetime] = Field(
        None, description='Indcate the date when the recurrance should stop'
    )
    Month: Optional[int] = Field(
        None, description='Month when the recurrance should happen'
    )
    RecurrancePattern_1: Optional[RecurrancePattern] = Field(
        None, alias='RecurrancePattern', description='How often the recurrance occurs'
    )
    RecurranceValue: Optional[int] = Field(
        None,
        description='Recurring every [value] RecurrancePattern\r\nEx: Recur every 1 week',
    )
    StartOfRecurrance: Optional[datetime] = Field(
        None, description='Indcate the date when the recurrance has started'
    )
    Status: Optional[Status11] = Field(None, description='The status of the recurrance')
    Title: Optional[str] = Field(
        None,
        description='Title of the recurring profile. \r\nEx: BRAND PACKAGE - 2017-08-16 - 2018-08-16',
    )


class Status12(Enum):
    Draft = 'Draft'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    Void = 'Void'


class Type11(Enum):
    External = 'External'
    Uploaded = 'Uploaded'


class InvoiceUpdateAttachmentApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of invoice attachment')
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type11] = Field(
        None, description='Type of the link (Attached or external)'
    )


class InvoiceUpdateItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Amount per unit')
    Description: Optional[str] = Field(
        None, description='Additional description attached to the invoice item'
    )
    DiscountPercentage: Optional[float] = Field(
        None, description='Discount percentage for the overall amount'
    )
    Id: Optional[int] = Field(None, description='Id of invoice item')
    Quantity: Optional[float] = Field(
        None, description='Quantity in total used for the work type'
    )
    TaxId: Optional[int] = Field(None, description='Tax applied on the item')
    TaxPercentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')
    WorkTypeId: Optional[int] = Field(
        None, description='Work type (Name of the service)'
    )


class InvoiceUriApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Unique link to the invoice')


class ListResultEstimationDetailsApiModel(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[EstimationDetailsApiModel]] = None
    TotalCount: Optional[int] = None


class ListResultInvoiceCategoryApiModel(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[InvoiceCategoryApiModel]] = None
    TotalCount: Optional[int] = None


class OrderAttachmentApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type11] = Field(
        None, description='Type of the link (Attached or external)'
    )


class OrderBillingDetailsApiModel(BaseModel):
    Address: Optional[str] = Field(None, description='Client street and number')
    CountryId: Optional[int] = Field(None, description='Client country id')
    Email: Optional[str] = Field(None, description='Client email')
    Name: Optional[str] = Field(None, description='Client name')
    PhoneNumber: Optional[str] = Field(None, description='Client phone number')


class Status13(Enum):
    PendingPayment = 'PendingPayment'
    Processing = 'Processing'
    Shipped = 'Shipped'
    Completed = 'Completed'
    OnHold = 'OnHold'
    Cancelled = 'Cancelled'
    Refunded = 'Refunded'
    Failed = 'Failed'


class OrderDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of order to be deleted')


class OrderItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Work item cost')
    Description: Optional[str] = Field(None, description='General description')
    ProductItemId: Optional[int] = Field(
        None, description='Foreign key product item id'
    )
    Quantity: Optional[float] = Field(None, description='Work item quantity')
    ReferenceId: Optional[str] = Field(None, description='Order SKU')
    SubTotalAmount: Optional[float] = Field(
        None, description='Subtotal amount of product'
    )
    TaxAmount: Optional[float] = Field(None, description='Tax amount')
    TaxId: Optional[int] = Field(None, description='Foreign key Tax id')
    TaxPercentage: Optional[float] = Field(None, description='Tax percentage')
    TotalAmount: Optional[float] = Field(None, description='Total amount of product')
    WorkTypeId: Optional[int] = Field(None, description='Foreign key work type id')


class OrderShippingDetailsApiModel(BaseModel):
    Address: Optional[str] = Field(None, description='Client street and number')
    CountryId: Optional[int] = Field(None, description='Client country id')
    Email: Optional[str] = Field(None, description='Client email')
    Name: Optional[str] = Field(None, description='Client name')
    PhoneNumber: Optional[str] = Field(None, description='Client phone number')


class Type13(Enum):
    Other = 'Other'
    Paypal = 'Paypal'
    Stripe = 'Stripe'
    Payoneer = 'Payoneer'
    Bank = 'Bank'
    Cash = 'Cash'
    Cheque = 'Cheque'
    Ach = 'Ach'
    Sepa = 'Sepa'
    Square = 'Square'
    KlikAndPay = 'KlikAndPay'
    Razorpay = 'Razorpay'
    Wepay = 'Wepay'
    Halkbank = 'Halkbank'
    TwoCheckout = 'TwoCheckout'
    PaymentWall = 'PaymentWall'
    BamboraEU = 'BamboraEU'
    BamboraNA = 'BamboraNA'
    Nlb = 'Nlb'
    AuthorizeNet = 'AuthorizeNet'
    Braintree = 'Braintree'


class ConnectionType(Enum):
    OAuth = 'OAuth'
    InputFields = 'InputFields'
    Dropdown = 'Dropdown'


class PaymentGatewayDetailsApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Name of the payment gateway')
    SupportedCurrencies: Optional[List[CurrencyApiModel]] = Field(
        None, description='List of supported currencies.'
    )


class PaymentGatewayForInvoice(BaseModel):
    Id: Optional[int] = None
    Name: Optional[str] = None


class Type14(Enum):
    Input = 'Input'
    Dropdown = 'Dropdown'


class PaymentGatewayInputField(BaseModel):
    IsConfigurable: Optional[bool] = None
    Name: Optional[str] = None
    Type: Optional[Type14] = None
    Value: Optional[str] = None
    Values: Optional[List[str]] = None


class PaymentLinkUriApiModel(BaseModel):
    Link: Optional[str] = Field(None, description='Unique link to the invoice')


class Type15(Enum):
    External = 'External'
    Uploaded = 'Uploaded'


class ProductAttachmentApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Product attachment id')
    Link: Optional[str] = Field(None, description='Link to the file')
    ObfuscatedFileName: Optional[str] = Field(
        None, description='Hashed file name to avoid url wildguessing'
    )
    OriginalFileName: Optional[str] = Field(None, description='Name of the file')
    Size: Optional[int] = Field(None, description='File size number in bytes')
    Type: Optional[Type15] = Field(
        None, description='Type of the link (Attached or external)'
    )


class ProductCouponApiModel(BaseModel):
    Code: Optional[str] = Field(
        None, description='Coupon to apply in order to get the discount'
    )
    DiscountAmount: Optional[float] = Field(None, description='Discount amount')
    DiscountPercentage: Optional[float] = Field(None, description='Discount percentage')
    Id: Optional[int] = Field(None, description='Product coupon id')
    ValidUntil: Optional[datetime] = Field(None, description='Coupon expiration date')


class Status16(Enum):
    Active = 'Active'
    NotAvailable = 'NotAvailable'
    Inactive = 'Inactive'


class ProductDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of product to be deleted')


class ProductDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(None, description='Product short link')
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    ButtonCallToAction: Optional[str] = Field(
        None, description='Default button call to action\r\nEx: Buy now, subscribe, ...'
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    Id: Optional[int] = Field(None, description='Product id')
    IsFeatured: Optional[bool] = Field(
        None, description='Indicate that the product is set as featured'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status16] = Field(None, description='Product availability status')
    SubTotalAmount: Optional[float] = Field(
        None, description='Subtotal amount of product'
    )
    TotalAmount: Optional[float] = Field(None, description='Total amount of product')
    TotalWithShipping: Optional[float] = Field(
        None, description='Total amount of product with shipping'
    )
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class ProductDiscountApiModel(BaseModel):
    DiscountAmount: Optional[float] = Field(None, description='Discount amount')
    DiscountPercentage: Optional[float] = Field(None, description='Discount percentage')
    Id: Optional[int] = Field(None, description='Product discount id')
    Name: Optional[str] = Field(None, description='Name')
    ValidFrom: Optional[datetime] = Field(None, description='Discount start date')
    ValidTo: Optional[datetime] = Field(None, description='Discount expiration date')


class ProductGatewayApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Payment gateway name')


class ProductItemApiModel(BaseModel):
    Cost: Optional[float] = Field(None, description='Work item cost')
    Description: Optional[str] = Field(None, description='General description')
    Id: Optional[int] = Field(None, description='Product item id')
    MinimumQuantity: Optional[float] = Field(
        None, description='Minimum required quantity in order to buy a work item'
    )
    ReferenceId: Optional[str] = Field(None, description='Product SKU')
    SubTotalAmount: Optional[float] = Field(
        None, description='Subtotal amount of product'
    )
    TaxAmount: Optional[float] = Field(None, description='Tax amount')
    TaxId: Optional[int] = Field(None, description='Foreign key Tax id')
    TaxPercentage: Optional[float] = Field(None, description='Tax percentage')
    TotalAmount: Optional[float] = Field(None, description='Total amount of product')
    WorkTypeId: Optional[int] = Field(None, description='Foreign key work type id')


class ProductUpdateApiModel(BaseModel):
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    Attachments: Optional[List[ProductAttachmentApiModel]] = Field(
        None, description='List of product attachments'
    )
    ButtonCallToAction: Optional[str] = Field(
        None, description='Default button call to action\r\nEx: Buy now, subscribe, ...'
    )
    Coupons: Optional[List[ProductCouponApiModel]] = Field(
        None, description='List of product coupons'
    )
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    Discounts: Optional[List[ProductDiscountApiModel]] = Field(
        None, description='List of product discounts'
    )
    Id: Optional[int] = Field(None, description='Product id')
    IsFeatured: Optional[bool] = Field(
        None, description='Indicate that the product is set as featured'
    )
    Items: Optional[List[ProductItemApiModel]] = Field(
        None, description='List of product items'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    PaymentGateways: Optional[List[ProductGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this product'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status16] = Field(None, description='Product availability status')
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class QueryOptions(BaseModel):
    Page: Optional[int] = None
    PageSize: Optional[int] = None


class Status20(Enum):
    Pending = 'Pending'
    Cancelled = 'Cancelled'
    Failed = 'Failed'
    Processed = 'Processed'


class Status21(Enum):
    Pending = 'Pending'
    Active = 'Active'
    Cancelled = 'Cancelled'
    Finished = 'Finished'


class RecurringProfile(BaseModel):
    DayOfMonth: Optional[int] = None
    DayOfWeek_1: Optional[DayOfWeek] = Field(None, alias='DayOfWeek')
    DueDateInDays: Optional[int] = None
    EndOfRecurrance: Optional[datetime] = None
    Id: Optional[int] = None
    InvoiceId: Optional[int] = None
    Month: Optional[int] = None
    RecurrancePattern_1: Optional[RecurrancePattern] = Field(
        None, alias='RecurrancePattern'
    )
    RecurranceValue: Optional[int] = None
    StartOfRecurrance: Optional[datetime] = None
    Status: Optional[Status21] = None
    Title: Optional[str] = None


class Order(Enum):
    None_ = 'None'
    Asc = 'Asc'
    Desc = 'Desc'


class SearchRequest(BaseModel):
    Order_1: Optional[Order] = Field(None, alias='Order')
    OrderBy: Optional[str] = None
    Page: Optional[int] = None
    PageSize: Optional[int] = None
    Query: Optional[str] = None


class SendEstimationToClientApiModel(BaseModel):
    AttachPdf: Optional[bool] = Field(None, description='Should attach pdf file')
    EstimationId: Optional[int] = Field(None, description='Id of the estimation')
    Id: Optional[int] = Field(None, description='Id of the estimation')
    Message: Optional[str] = Field(
        None, description='Message to be embedded in the email'
    )
    SendToSelf: Optional[bool] = Field(
        None, description='Should email copy be send to self'
    )
    Subject: Optional[str] = Field(None, description='Subject for the email')


class SendInvoiceToAccountantApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of the invoice')


class SendInvoiceToClientApiModel(BaseModel):
    AttachPdf: Optional[bool] = Field(None, description='Should attach pdf file')
    Id: Optional[int] = Field(None, description='Id of the invoice')
    InvoiceId: Optional[int] = Field(None, description='Id of the invoice')
    Message: Optional[str] = Field(
        None, description='Message to be embedded in the email'
    )
    SendToSelf: Optional[bool] = Field(
        None, description='Should email copy be send to self'
    )
    Subject: Optional[str] = Field(None, description='Subject for the email')


class Feature(Enum):
    Api = 'Api'
    Teams = 'Teams'
    Clients = 'Clients'
    Shop = 'Shop'
    PaymentLinks = 'PaymentLinks'
    Cname = 'Cname'


class Recurrence(Enum):
    Monthly = 'Monthly'
    Yearly = 'Yearly'


class Status22(Enum):
    ActiveTrial = 'ActiveTrial'
    ExpiredTrial = 'ExpiredTrial'
    Active = 'Active'
    Canceled = 'Canceled'
    Fraudlent = 'Fraudlent'


class SystemCancelationReason(Enum):
    FailToCaptureFee = 'FailToCaptureFee'
    Fraud = 'Fraud'


class SubscriptionPlan(BaseModel):
    CancellatedOn: Optional[datetime] = None
    CouponCode: Optional[str] = None
    CurrencyCode: Optional[str] = None
    ExternalIdentifier: Optional[str] = None
    Features: Optional[List[Feature]] = None
    HasDuePayment: Optional[bool] = None
    HasDuePaymentSince: Optional[datetime] = None
    Id: Optional[int] = None
    Identifier: Optional[str] = None
    IsActive: Optional[bool] = None
    IsLifetime: Optional[bool] = None
    LastPaymentOn: Optional[datetime] = None
    MaxClients: Optional[int] = None
    Name: Optional[str] = None
    OnHold: Optional[bool] = None
    OrderIdentifier: Optional[str] = None
    Price: Optional[float] = None
    Recurrence_1: Optional[Recurrence] = Field(None, alias='Recurrence')
    SaleId: Optional[int] = None
    Status: Optional[Status22] = None
    SystemCancelationReason_1: Optional[SystemCancelationReason] = Field(
        None, alias='SystemCancelationReason'
    )
    TrialEndsOn: Optional[datetime] = None
    TrialNumberOfDays: Optional[int] = None
    TrialStartsOn: Optional[datetime] = None
    UserId: Optional[int] = None
    Version: Optional[int] = None


class Tax(BaseModel):
    Id: Optional[int] = None
    Name: Optional[str] = None
    Percentage: Optional[float] = None
    UserId: Optional[int] = None


class TaxCreateApiModel(BaseModel):
    Name: Optional[str] = Field(None, description='Name of the task')
    Percentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')


class TaxDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of tax to be deleted')


class TaxDetailsApiModel(BaseModel):
    CreatedOn: Optional[datetime] = Field(None, description='Date of creation')
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the task')
    Percentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')


class TaxUpdateApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the task')
    Percentage: Optional[float] = Field(None, description='Task percentage. Ex: 18%')


class UILanguageDetailsApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Name: Optional[str] = Field(None, description='Name of the country')
    UiCulture: Optional[str] = Field(None, description='Ui culture options')


class UiLanguage(BaseModel):
    Id: Optional[int] = None
    Name: Optional[str] = None
    UiCulture: Optional[str] = None


class Status23(Enum):
    Normal = 'Normal'
    Fraudlent = 'Fraudlent'
    Locked = 'Locked'


class Type16(Enum):
    Anonymous = 'Anonymous'
    Customer = 'Customer'
    SystemAdministrator = 'SystemAdministrator'
    Collaborator = 'Collaborator'


class YearsOfExperience(Enum):
    One = 'One'
    OneToThree = 'OneToThree'
    ThreeToFive = 'ThreeToFive'
    SixPlus = 'SixPlus'


class InvoiceTemplate(Enum):
    Default = 'Default'
    Template1 = 'Template1'
    Template2 = 'Template2'


class Profession(Enum):
    Other = 'Other'
    DesignAndCreative = 'DesignAndCreative'
    SoftwareDevelopment = 'SoftwareDevelopment'
    ContentWritingAndMarketing = 'ContentWritingAndMarketing'
    Freelancers = 'Freelancers'
    Consultants = 'Consultants'
    Smes = 'Smes'
    Enterprise = 'Enterprise'
    ECommerce = 'ECommerce'
    Individual = 'Individual'


class ReferralProgram(Enum):
    Enabled = 'Enabled'
    Disabled = 'Disabled'


class StoreCheckoutFields(Enum):
    ShowMinimumRequiredFields = 'ShowMinimumRequiredFields'
    ShowAllFields = 'ShowAllFields'


class UserSettings(BaseModel):
    AccountantEmail: Optional[str] = None
    Address: Optional[str] = None
    ApiKey: Optional[str] = None
    ApiSecret: Optional[str] = None
    BackgroundImage: Optional[str] = None
    Bank: Optional[str] = None
    BankAccount: Optional[str] = None
    Cname: Optional[str] = None
    CompanyRegistrationNumber: Optional[str] = None
    Country_1: Optional[Country] = Field(None, alias='Country')
    CountryId: Optional[int] = None
    Currency_1: Optional[Currency] = Field(None, alias='Currency')
    CurrencyId: Optional[int] = None
    CurrencySymbol: Optional[str] = None
    DefaultDateFormat: Optional[str] = None
    DefaultDueDateInDays: Optional[int] = None
    DoNotTrack: Optional[bool] = None
    EnableClientPortal: Optional[bool] = None
    EnablePredictiveInvoicing: Optional[bool] = None
    EnableRecurringInvoicing: Optional[bool] = None
    HasInvoiceLogo: Optional[bool] = None
    Iban: Optional[str] = None
    Id: Optional[int] = None
    InvoiceTemplate_1: Optional[InvoiceTemplate] = Field(None, alias='InvoiceTemplate')
    InvoiceTemplateColorHex: Optional[str] = None
    PhoneNumber: Optional[str] = None
    Profession_1: Optional[Profession] = Field(None, alias='Profession')
    ReceiveSmsNotifications: Optional[bool] = None
    ReferralProgram_1: Optional[ReferralProgram] = Field(None, alias='ReferralProgram')
    StoreCheckoutFields_1: Optional[StoreCheckoutFields] = Field(
        None, alias='StoreCheckoutFields'
    )
    StoreColorHex: Optional[str] = None
    StoreCurrency: Optional[Currency] = None
    StoreCurrencyId: Optional[int] = None
    StoreCustomJavaScript: Optional[str] = None
    StoreDescription: Optional[str] = None
    StoreEmail: Optional[str] = None
    StoreLanguage: Optional[UiLanguage] = None
    StoreLanguageId: Optional[int] = None
    StoreName: Optional[str] = None
    StorePurchaseEmailMessage: Optional[str] = None
    StorePurchaseThankYouMessage: Optional[str] = None
    StoreTextColorHex: Optional[str] = None
    StoreUrl: Optional[str] = None
    SubscribeToProductEmails: Optional[bool] = None
    Swift: Optional[str] = None
    Terms: Optional[str] = None
    UserId: Optional[int] = None
    UserSignature: Optional[str] = None
    VatNumber: Optional[str] = None
    YearsOfExperience: Optional[int] = None


class WorkType(BaseModel):
    Id: Optional[int] = None
    Title: Optional[str] = None
    UserId: Optional[int] = None


class WorkTypeCreateApiModel(BaseModel):
    Title: Optional[str] = Field(
        None,
        description='Indicates the title of of the work type (Logo design, development...)',
    )


class WorkTypeDeleteApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Id of work type to be deleted')


class WorkTypeDetailsApiModel(BaseModel):
    CreatedOn: Optional[datetime] = Field(None, description='Date of creation')
    Id: Optional[int] = Field(None, description='Entity id')
    Title: Optional[str] = Field(
        None,
        description='Indicates the title of of the work type (Logo design, development...)',
    )


class WorkTypeUpdateApiModel(BaseModel):
    Id: Optional[int] = Field(None, description='Entity id')
    Title: Optional[str] = Field(
        None,
        description='Indicates the title of of the work type (Logo design, development...)',
    )


class ApiClientAllGetResponse(RootModel[List[ClientDetailsApiModel]]):
    root: List[ClientDetailsApiModel]


class ApiEstimationStatusGetResponse(Enum):
    Draft = 'Draft'
    Accepted = 'Accepted'
    Rejected = 'Rejected'


class ApiGeneralCountriesGetResponse(RootModel[List[CountryDetailsApiModel]]):
    root: List[CountryDetailsApiModel]


class ApiGeneralCurrenciesGetResponse(RootModel[List[CurrencyDetailsApiModel]]):
    root: List[CurrencyDetailsApiModel]


class ApiGeneralDateformatsGetResponse(RootModel[List[str]]):
    root: List[str]


class ApiGeneralUilanguagesGetResponse(RootModel[List[UILanguageDetailsApiModel]]):
    root: List[UILanguageDetailsApiModel]


class ApiInvoiceStatusGetResponse(Enum):
    Draft = 'Draft'
    Paid = 'Paid'
    Unpaid = 'Unpaid'
    Overdue = 'Overdue'
    Void = 'Void'


class ApiPaymentSupportedGetResponse(RootModel[List[PaymentGatewayDetailsApiModel]]):
    root: List[PaymentGatewayDetailsApiModel]


class ApiTaxAllGetResponse(RootModel[List[TaxDetailsApiModel]]):
    root: List[TaxDetailsApiModel]


class ApiWorktypeAllGetResponse(RootModel[List[WorkTypeDetailsApiModel]]):
    root: List[WorkTypeDetailsApiModel]


class QueryOptionsOrder(Enum):
    None_ = 'None'
    Asc = 'Asc'
    Desc = 'Desc'


class ApiWorktypeSearchGetResponse(RootModel[List[WorkTypeDetailsApiModel]]):
    root: List[WorkTypeDetailsApiModel]


class AdditionalClientEmail(BaseModel):
    Client_1: Optional[Client] = Field(None, alias='Client')
    ClientId: Optional[int] = None
    Email: Optional[str] = None
    Id: Optional[int] = None


class EstimationCreateApiModel(BaseModel):
    Attachments: Optional[List[EstimationCreateAttachmentApiModel]] = Field(
        None, description='List of estimation attachments'
    )
    ClientId: Optional[int] = Field(
        None, description='The client to whom this estimation is assigned'
    )
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which estimation this estimation has been cloned from',
    )
    CurrencyId: Optional[int] = Field(
        None, description='Id of the currency for the estimation amounts'
    )
    ExpiresOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation will be proclamed as due'
    )
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation was issued'
    )
    Items: Optional[List[EstimationCreateItemApiModel]] = Field(
        None, description='List of estimation items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the estimation'
    )
    Number: Optional[str] = Field(None, description='Unique estimation number')
    PaymentGateways: Optional[List[EstimationGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this estimation'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    Status: Optional[Status2] = Field(
        None, description='Indicate the status of the estimation (paid/unpaid/overdue)'
    )
    Terms: Optional[str] = Field(None, description='Terms of agreement')


class EstimationFullDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(
        None,
        description='Security access token used for accessing the estimation anonymously',
    )
    Activities: Optional[List[EstimationActivityApiModel]] = Field(
        None, description='List of estimation activities. estimation audit log'
    )
    Attachments: Optional[List[EstimationAttachmentApiModel]] = Field(
        None, description='List of estimation attachments'
    )
    Client: Optional[ClientDetailsApiModel] = None
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which estimation this estimation has been cloned from',
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    ExpiresOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation will be proclamed as due'
    )
    Id: Optional[int] = Field(None, description='Estimation id')
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation was issued'
    )
    Items: Optional[List[EstimationItemApiModel]] = Field(
        None, description='List of estimation items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the estimation'
    )
    Number: Optional[str] = Field(None, description='Unique estimation number')
    PaymentGateways: Optional[List[EstimationGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this estimation'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    Status: Optional[Status2] = Field(
        None, description='Indicate the status of the estimation (paid/unpaid/overdue)'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Total amount of the estimation without tax'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    Terms: Optional[str] = Field(None, description='Terms of agreement')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the estimation with tax'
    )


class EstimationUpdateApiModel(BaseModel):
    Attachments: Optional[List[EstimationUpdateAttachmentApiModel]] = Field(
        None, description='List of estimation attachments'
    )
    ClientId: Optional[int] = Field(
        None, description='The client to whom this estimation is assigned'
    )
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which estimation this estimation has been cloned from',
    )
    CurrencyId: Optional[int] = Field(
        None, description='Id of the currency for the estimation amounts'
    )
    ExpiresOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation will be proclamed as due'
    )
    Id: Optional[int] = Field(None, description='estimation id')
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the estimation was issued'
    )
    Items: Optional[List[EstimationUpdateItemApiModel]] = Field(
        None, description='List of estimation items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the estimation'
    )
    Number: Optional[str] = Field(None, description='Unique estimation number')
    PaymentGateways: Optional[List[EstimationGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this estimation'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    Status: Optional[Status2] = Field(
        None, description='Indicate the status of the estimation (paid/unpaid/overdue)'
    )
    Terms: Optional[str] = Field(None, description='Terms of agreement')


class InvoiceCreateApiModel(BaseModel):
    Attachments: Optional[List[InvoiceCreateAttachmentApiModel]] = Field(
        None, description='List of invoice attachments'
    )
    ClientId: Optional[int] = Field(
        None, description='The client to whom this invoice is assigned'
    )
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which invoice this invoice has been cloned from',
    )
    CurrencyId: Optional[int] = Field(
        None, description='Id of the currency for the invoice amounts'
    )
    Duedate: Optional[datetime] = Field(
        None, description='Indicates when the invoice will be proclamed as due'
    )
    InvoiceCategoryId: Optional[int] = Field(
        None, description='Hold the id of the invoice category'
    )
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the invoice was issued'
    )
    Items: Optional[List[InvoiceCreateItemApiModel]] = Field(
        None, description='List of invoice items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the invoice'
    )
    Number: Optional[str] = Field(None, description='Unique invoice number')
    PaymentGateways: Optional[List[InvoiceGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this invoice'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    RecurringProfile: Optional[InvoiceRecurringApiModel] = None
    RecurringProfileId: Optional[int] = Field(
        None, description='Hold the id of the recurring profile'
    )
    ShouldSendReminders: Optional[bool] = Field(
        None, description='Should send email reminders to client?'
    )
    Status: Optional[Status7] = Field(
        None, description='Indicate the status of the invoice (paid/unpaid/overdue)'
    )
    Terms: Optional[str] = Field(None, description='Terms of agreement')


class InvoiceDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(
        None,
        description='Security access token used for accessing the invoice anonymously',
    )
    Client: Optional[ClientDetailsApiModel] = None
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which invoice this invoice has been cloned from',
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    Duedate: Optional[datetime] = Field(
        None, description='Indicates when the invoice will be proclamed as due'
    )
    EnablePartialPayments: Optional[bool] = Field(
        None,
        description='Indicate that the invoice allows the user to pay the invoice partially',
    )
    Id: Optional[int] = Field(None, description='Invoice id')
    InvoiceCategoryId: Optional[int] = Field(
        None, description='Hold the id of the invoice category'
    )
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the invoice was issued'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the invoice'
    )
    Number: Optional[str] = Field(None, description='Unique invoice number')
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    RecurringProfile: Optional[InvoiceRecurringApiModel] = None
    RecurringProfileId: Optional[int] = Field(
        None, description='Hold the id of the recurring profile'
    )
    ShouldSendReminders: Optional[bool] = Field(
        None, description='Should send email reminders to client?'
    )
    Status: Optional[Status7] = Field(
        None, description='Indicate the status of the invoice (paid/unpaid/overdue)'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Total amount of the invoice without tax'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    Terms: Optional[str] = Field(None, description='Terms of agreement')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the invoice with tax'
    )


class InvoiceFullDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(
        None,
        description='Security access token used for accessing the invoice anonymously',
    )
    Activities: Optional[List[InvoiceActivityApiModel]] = Field(
        None, description='List of invoice activities. Invoice audit log'
    )
    Attachments: Optional[List[InvoiceAttachmentApiModel]] = Field(
        None, description='List of invoice attachments'
    )
    Client: Optional[ClientDetailsApiModel] = None
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which invoice this invoice has been cloned from',
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    DiscountAmount: Optional[float] = Field(
        None, description='Amount that goes as a discount'
    )
    Duedate: Optional[datetime] = Field(
        None, description='Indicates when the invoice will be proclamed as due'
    )
    EnablePartialPayments: Optional[bool] = Field(
        None,
        description='Indicate that the invoice allows the user to pay the invoice partially',
    )
    Id: Optional[int] = Field(None, description='Invoice id')
    InvoiceCategoryId: Optional[int] = Field(
        None, description='Hold the id of the invoice category'
    )
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the invoice was issued'
    )
    Items: Optional[List[InvoiceItemApiModel]] = Field(
        None, description='List of invoice items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the invoice'
    )
    Number: Optional[str] = Field(None, description='Unique invoice number')
    PaymentGateways: Optional[List[InvoiceGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this invoice'
    )
    Payments: Optional[List[InvoicePaymentApiModel]] = Field(
        None, description='List of invoice payments'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    RecurringProfile: Optional[InvoiceRecurringApiModel] = None
    RecurringProfileId: Optional[int] = Field(
        None, description='Hold the id of the recurring profile'
    )
    ShouldSendReminders: Optional[bool] = Field(
        None, description='Should send email reminders to client?'
    )
    Status: Optional[Status7] = Field(
        None, description='Indicate the status of the invoice (paid/unpaid/overdue)'
    )
    SubTotalAmount: Optional[float] = Field(
        None, description='Total amount of the invoice without tax'
    )
    TaxAmount: Optional[float] = Field(None, description='Amount that goes to the tax')
    Terms: Optional[str] = Field(None, description='Terms of agreement')
    TotalAmount: Optional[float] = Field(
        None, description='Total amount of the invoice with tax'
    )


class InvoiceUpdateApiModel(BaseModel):
    Attachments: Optional[List[InvoiceUpdateAttachmentApiModel]] = Field(
        None, description='List of invoice attachments'
    )
    ClientId: Optional[int] = Field(
        None, description='The client to whom this invoice is assigned'
    )
    ClonedFromId: Optional[int] = Field(
        None,
        description='Indicate from which invoice this invoice has been cloned from',
    )
    CurrencyId: Optional[int] = Field(
        None, description='Id of the currency for the invoice amounts'
    )
    Duedate: Optional[datetime] = Field(
        None, description='Indicates when the invoice will be proclamed as due'
    )
    Id: Optional[int] = Field(None, description='Invoice id')
    InvoiceCategoryId: Optional[int] = Field(
        None, description='Hold the id of the invoice category'
    )
    IssuedOn: Optional[datetime] = Field(
        None, description='Indicates when the invoice was issued'
    )
    Items: Optional[List[InvoiceUpdateItemApiModel]] = Field(
        None, description='List of invoice items'
    )
    Notes: Optional[str] = Field(
        None, description='Internal note regarding the invoice'
    )
    Number: Optional[str] = Field(None, description='Unique invoice number')
    PaymentGateways: Optional[List[InvoiceGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this invoice'
    )
    PoNumber: Optional[str] = Field(
        None, description='Unique number generated by the buyer'
    )
    RecurringProfile: Optional[InvoiceRecurringApiModel] = None
    RecurringProfileId: Optional[int] = Field(
        None, description='Hold the id of the recurring profile'
    )
    ShouldSendReminders: Optional[bool] = Field(
        None, description='Should send email reminders to client?'
    )
    Status: Optional[Status12] = Field(
        None, description='Indicate the status of the invoice (paid/unpaid/overdue)'
    )
    Terms: Optional[str] = Field(None, description='Terms of agreement')


class ListResultInvoiceDetailsApiModel(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[InvoiceDetailsApiModel]] = None
    TotalCount: Optional[int] = None


class ListResultProductDetailsApiModel(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[ProductDetailsApiModel]] = None
    TotalCount: Optional[int] = None


class OrderCreateApiModel(BaseModel):
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    Attachments: Optional[List[OrderAttachmentApiModel]] = Field(
        None, description='List of Order attachments'
    )
    CouponCode: Optional[str] = Field(
        None, description='Coupon to apply in order to get the discount'
    )
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    DiscountAmount: Optional[float] = Field(None, description='Discount amount')
    Items: Optional[List[OrderItemApiModel]] = Field(
        None, description='List of Order items'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    Note: Optional[str] = Field(None, description='Customer note to seller')
    OrderBillingDetails: Optional[OrderBillingDetailsApiModel] = None
    OrderShippingDetails: Optional[OrderShippingDetailsApiModel] = None
    ProductId: Optional[int] = Field(None, description='Product id')
    Referral: Optional[str] = Field(
        None, description='Represent the referral for this order'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status13] = Field(None, description='Order status')
    SubTotalAmount: Optional[float] = Field(None, description='Sub total amount')
    TaxAmount: Optional[float] = Field(None, description='Tax amount')
    TotalAmount: Optional[float] = Field(None, description='Total amount')
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class OrderDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(None, description='Product short link')
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    CouponCode: Optional[str] = Field(
        None, description='Coupon to apply in order to get the discount'
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    DiscountAmount: Optional[float] = Field(None, description='Discount amount')
    Id: Optional[int] = Field(None, description='Order id')
    Name: Optional[str] = Field(None, description='Product alias')
    Note: Optional[str] = Field(None, description='Customer note to seller')
    OrderBillingDetails: Optional[OrderBillingDetailsApiModel] = None
    OrderShippingDetails: Optional[OrderShippingDetailsApiModel] = None
    ProductId: Optional[int] = Field(None, description='Product id')
    Referral: Optional[str] = Field(
        None, description='Represent the referral for this order'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status13] = Field(None, description='Order status')
    SubTotalAmount: Optional[float] = Field(None, description='Sub total amount')
    TaxAmount: Optional[float] = Field(None, description='Tax amount')
    TotalAmount: Optional[float] = Field(None, description='Total amount')
    TotalWithShipping: Optional[float] = Field(
        None, description='Total amount with shipping'
    )
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class OrderFullDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(None, description='Product short link')
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    Attachments: Optional[List[OrderAttachmentApiModel]] = Field(
        None, description='List of Order attachments'
    )
    CouponCode: Optional[str] = Field(
        None, description='Coupon to apply in order to get the discount'
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    DiscountAmount: Optional[float] = Field(None, description='Discount amount')
    Id: Optional[int] = Field(None, description='Order id')
    Items: Optional[List[OrderItemApiModel]] = Field(
        None, description='List of Order items'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    Note: Optional[str] = Field(None, description='Customer note to seller')
    OrderBillingDetails: Optional[OrderBillingDetailsApiModel] = None
    OrderShippingDetails: Optional[OrderShippingDetailsApiModel] = None
    ProductId: Optional[int] = Field(None, description='Product id')
    Referral: Optional[str] = Field(
        None, description='Represent the referral for this order'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status13] = Field(None, description='Order status')
    SubTotalAmount: Optional[float] = Field(None, description='Sub total amount')
    TaxAmount: Optional[float] = Field(None, description='Tax amount')
    TotalAmount: Optional[float] = Field(None, description='Total amount')
    TotalWithShipping: Optional[float] = Field(
        None, description='Total amount with shipping'
    )
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class PaymentGateway(BaseModel):
    CanDisconnect: Optional[bool] = None
    ClientImportUri: Optional[str] = None
    ConnectionType_1: Optional[ConnectionType] = Field(None, alias='ConnectionType')
    ExternalConnectionId: Optional[int] = None
    Fields: Optional[List[PaymentGatewayInputField]] = None
    IsConnected: Optional[bool] = None
    IsEnabled: Optional[bool] = None
    MaximumAmount: Optional[float] = None
    MinimumAmount: Optional[float] = None
    Name: Optional[str] = None
    OAuthUri: Optional[str] = None
    RefundUri: Optional[str] = None
    SupportedCurrencies: Optional[List[Currency]] = None
    SupportsClientsImport: Optional[bool] = None
    SupportsInstantCheckout: Optional[bool] = None
    SupportsRefund: Optional[bool] = None


class PaymentLinkItem(BaseModel):
    Cost: Optional[float] = None
    DiscountAmount: Optional[float] = None
    DiscountPercentage: Optional[float] = None
    Id: Optional[int] = None
    PaymentLinkId: Optional[int] = None
    Quantity: Optional[float] = None
    SubTotalAmount: Optional[float] = None
    Tax_1: Optional[Tax] = Field(None, alias='Tax')
    TaxAmount: Optional[float] = None
    TaxId: Optional[int] = None
    TaxPercentage: Optional[float] = None
    TotalAmount: Optional[float] = None
    WorkType_1: Optional[WorkType] = Field(None, alias='WorkType')
    WorkTypeId: Optional[int] = None


class ProductCreateApiModel(BaseModel):
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    Attachments: Optional[List[ProductAttachmentApiModel]] = Field(
        None, description='List of product attachments'
    )
    ButtonCallToAction: Optional[str] = Field(
        None, description='Default button call to action\r\nEx: Buy now, subscribe, ...'
    )
    Coupons: Optional[List[ProductCouponApiModel]] = Field(
        None, description='List of product coupons'
    )
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    Discounts: Optional[List[ProductDiscountApiModel]] = Field(
        None, description='List of product discounts'
    )
    IsFeatured: Optional[bool] = Field(
        None, description='Indicate that the product is set as featured'
    )
    Items: Optional[List[ProductItemApiModel]] = Field(
        None, description='List of product items'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    PaymentGateways: Optional[List[ProductGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this product'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status16] = Field(None, description='Product availability status')
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class ProductFullDetailsApiModel(BaseModel):
    AccessToken: Optional[str] = Field(None, description='Product short link')
    AfterPaymentDescription: Optional[str] = Field(
        None, description='After payment description'
    )
    Attachments: Optional[List[ProductAttachmentApiModel]] = Field(
        None, description='List of product attachments'
    )
    ButtonCallToAction: Optional[str] = Field(
        None, description='Default button call to action\r\nEx: Buy now, subscribe, ...'
    )
    Coupons: Optional[List[ProductCouponApiModel]] = Field(
        None, description='List of product coupons'
    )
    Currency: Optional[CurrencyDetailsApiModel] = None
    CurrencyId: Optional[int] = Field(None, description='Foreign key Currency')
    Description: Optional[str] = Field(None, description='Product description')
    Discounts: Optional[List[ProductDiscountApiModel]] = Field(
        None, description='List of product discounts'
    )
    Id: Optional[int] = Field(None, description='Product id')
    IsFeatured: Optional[bool] = Field(
        None, description='Indicate that the product is set as featured'
    )
    Items: Optional[List[ProductItemApiModel]] = Field(
        None, description='List of product items'
    )
    Name: Optional[str] = Field(None, description='Product alias')
    PaymentGateways: Optional[List[ProductGatewayApiModel]] = Field(
        None, description='List of enabled payment gateways for this product'
    )
    ShippingAmount: Optional[float] = Field(
        None, description='Cost for shipping the product'
    )
    ShippingDescription: Optional[str] = Field(
        None, description='Client instructions for shipping'
    )
    Status: Optional[Status16] = Field(None, description='Product availability status')
    SubTotalAmount: Optional[float] = Field(
        None, description='Subtotal amount of product'
    )
    TotalAmount: Optional[float] = Field(None, description='Total amount of product')
    TotalWithShipping: Optional[float] = Field(
        None, description='Total amount of product with shipping'
    )
    WhatHappensNextDescription: Optional[str] = Field(
        None, description='What happens next description'
    )


class User(BaseModel):
    ActionNotificationsLastReadOn: Optional[datetime] = None
    Email: Optional[str] = None
    ExternalConnections: Optional[List[ExternalConnection]] = None
    HasBeenOnboarded: Optional[bool] = None
    Id: Optional[int] = None
    IsLocked: Optional[bool] = None
    IsVerified: Optional[bool] = None
    KnowledgeNotificationsLastReadOn: Optional[datetime] = None
    LastSeenOn: Optional[datetime] = None
    Name: Optional[str] = None
    Password: Optional[str] = None
    PasswordSalt: Optional[str] = None
    ReferralPath: Optional[str] = None
    ReferredUsers: Optional[int] = None
    ReferrerKey: Optional[str] = None
    Settings: Optional[UserSettings] = None
    Status: Optional[Status23] = None
    SubscriptionPlan_1: Optional[SubscriptionPlan] = Field(
        None, alias='SubscriptionPlan'
    )
    Type: Optional[Type16] = None
    Username: Optional[str] = None
    VerifiedOn: Optional[datetime] = None
    YearsOfExperience_1: Optional[YearsOfExperience] = Field(
        None, alias='YearsOfExperience'
    )


class ListResultOrderDetailsApiModel(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[OrderDetailsApiModel]] = None
    TotalCount: Optional[int] = None


class Invoice(BaseModel):
    AccessToken: Optional[str] = None
    Activities: Optional[List[Activity]] = None
    Attachments: Optional[List[InvoiceAttachment]] = None
    ClientId: Optional[int] = None
    ClonedFromId: Optional[int] = None
    CurrencyId: Optional[int] = None
    DiscountAmount: Optional[float] = None
    Duedate: Optional[datetime] = None
    EnablePartialPayments: Optional[bool] = None
    EstimationId: Optional[int] = None
    Id: Optional[int] = None
    InvoiceCategoryId: Optional[int] = None
    IsDigitallySigned: Optional[bool] = None
    IssuedOn: Optional[datetime] = None
    Items: Optional[List[InvoiceItem]] = None
    Notes: Optional[str] = None
    Number: Optional[str] = None
    OrderId: Optional[int] = None
    PaymentGateways: Optional[List[PaymentGatewayForInvoice]] = None
    PaymentLinkId: Optional[int] = None
    Payments: Optional[List[Payment]] = None
    PoNumber: Optional[str] = None
    RecurringProfileId: Optional[int] = None
    ShouldSendReminders: Optional[bool] = None
    Status: Optional[Status7] = None
    SubTotalAmount: Optional[float] = None
    TaxAmount: Optional[float] = None
    Terms: Optional[str] = None
    TotalAmount: Optional[float] = None
    UserId: Optional[int] = None


class ListResultPaymentLink(BaseModel):
    Count: Optional[int] = None
    ErrorMessages: Optional[List[IErrorInfo]] = None
    IsFaulted: Optional[bool] = None
    Result: Optional[List[PaymentLink]] = None
    TotalCount: Optional[int] = None


class Payment(BaseModel):
    Amount: Optional[float] = None
    Id: Optional[int] = None
    Invoice_1: Optional[Invoice] = Field(None, alias='Invoice')
    InvoiceId: Optional[int] = None
    IsAutomatic: Optional[bool] = None
    Note: Optional[str] = None
    PaidOn: Optional[datetime] = None
    ReferenceId: Optional[str] = None
    Type: Optional[Type13] = None


class PaymentLink(BaseModel):
    AccessToken: Optional[str] = None
    Client_1: Optional[Client] = Field(None, alias='Client')
    ClientId: Optional[int] = None
    Currency_1: Optional[Currency] = Field(None, alias='Currency')
    CurrencyId: Optional[int] = None
    DiscountAmount: Optional[float] = None
    Id: Optional[int] = None
    Invoice_1: Optional[Invoice] = Field(None, alias='Invoice')
    Items: Optional[List[PaymentLinkItem]] = None
    Number: Optional[str] = None
    SubTotalAmount: Optional[float] = None
    TaxAmount: Optional[float] = None
    TotalAmount: Optional[float] = None
    User_1: Optional[User] = Field(None, alias='User')
    UserId: Optional[int] = None


class QueuedInvoice(BaseModel):
    ClonedFromId: Optional[int] = None
    Id: Optional[int] = None
    Invoice_1: Optional[Invoice] = Field(None, alias='Invoice')
    InvoiceId: Optional[int] = None
    RecurringProfileId: Optional[int] = None
    ScheduledFor: Optional[datetime] = None
    Status: Optional[Status20] = None
    UserId: Optional[int] = None


Invoice.model_rebuild()
ListResultPaymentLink.model_rebuild()
